// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XpertEducation.PagamentoFaturamento.Data;

#nullable disable

namespace XpertEducation.PagamentoFaturamento.Data.Migrations
{
    [DbContext(typeof(PagamentoContext))]
    partial class PagamentoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("XpertEducation.PagamentoFaturamento.Business.Models.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos", (string)null);
                });

            modelBuilder.Entity("XpertEducation.PagamentoFaturamento.Business.Models.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusTransacao")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PagamentoId")
                        .IsUnique();

                    b.ToTable("Transacoes", (string)null);
                });

            modelBuilder.Entity("XpertEducation.PagamentoFaturamento.Business.Models.Pagamento", b =>
                {
                    b.OwnsOne("XpertEducation.PagamentoFaturamento.Business.Models.DadosCartao", "DadosCartao", b1 =>
                        {
                            b1.Property<Guid>("PagamentoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Cvv")
                                .IsRequired()
                                .HasColumnType("VARCHAR(4)")
                                .HasColumnName("Cvv");

                            b1.Property<string>("Expiracao")
                                .IsRequired()
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Expiracao");

                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("varchar(250)")
                                .HasColumnName("Nome");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("varchar(16)")
                                .HasColumnName("Numero");

                            b1.HasKey("PagamentoId");

                            b1.ToTable("Pagamentos");

                            b1.WithOwner()
                                .HasForeignKey("PagamentoId");
                        });

                    b.Navigation("DadosCartao")
                        .IsRequired();
                });

            modelBuilder.Entity("XpertEducation.PagamentoFaturamento.Business.Models.Transacao", b =>
                {
                    b.HasOne("XpertEducation.PagamentoFaturamento.Business.Models.Pagamento", "Pagamento")
                        .WithOne("Transacao")
                        .HasForeignKey("XpertEducation.PagamentoFaturamento.Business.Models.Transacao", "PagamentoId")
                        .IsRequired();

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("XpertEducation.PagamentoFaturamento.Business.Models.Pagamento", b =>
                {
                    b.Navigation("Transacao")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
